pipeline {
    agent any

    stages{
      stage('git pull'){
        steps{
          sh "echo 'git pull'"
          git branch: 'feat/batch-149',
            credentialsId: 'yiyaaa',
            url: 'https://github.com/Selected-Seat/selected-seat'
        }
      }

      stage('secret yml setting'){
        steps{
          withCredentials([
            file(
              credentialsId: 'application-batch',
              variable: 'batch'
            )
          ]){
            script{
              sh 'chmod +x ./sh/webflux.sh'
              sh 'sudo ./sh/webflux.sh'
              sh 'sudo cp $batch ./batch/src/main/resources'
            }
          }
        }
      }

      stage('batch build') {
          steps {
             sh '''
                echo '빌드를 시작합니다.'
                chmod +x gradlew
                sudo ./gradlew clean bootjar
              '''
          }
      }

      stage('batch docker build'){
        steps{
          script{
            sh'''
              docker build -t batch:batch ./batch
            '''
          }
        }
      }

      stage('webflux image push ECR and update ECS') {
        steps {
            script{
              sh "sudo aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${env.ECR_URI}"

              sh "echo '도커 기존 이미지 삭제'"
              sh "sudo aws ecr batch-delete-image --repository-name selected-seat-test --image-ids imageTag=batch"

              sh "echo 'batch image를 ECR에 태그합니다.'"
              sh "sudo docker tag batch:batch ${env.ECR_URI}/selected-seat-test:batch"

              sh "echo 'batch image를  ECR에 push합니다.'"
              sh "sudo docker push ${env.ECR_URI}/selected-seat-test:batch"

              sh "echo 'back ecs 업데이트'"
              sh "sudo aws ecs update-service --cluster selected-cluster --service batch-test --force-new-deployment"
            }
        }
      }

      stage('docker image 정리') {
        steps {
           sh '''
              echo '도커 이미지를 정리합니다.'
              chmod +x ./sh/docker.sh
              sudo ./sh/docker.sh
            '''
        }
      }

    }
}
