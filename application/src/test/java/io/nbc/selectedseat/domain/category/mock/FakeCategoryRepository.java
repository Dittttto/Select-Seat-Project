package io.nbc.selectedseat.domain.category.mock;

import io.nbc.selectedseat.domain.category.model.Category;
import io.nbc.selectedseat.domain.category.repository.CategoryRepository;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.springframework.test.util.ReflectionTestUtils;

public class FakeCategoryRepository implements CategoryRepository {

    private Long autoGeneratedId = 0L;
    private final Map<Long, Category> store = new HashMap<>();

    @Override
    public Category save(String name) {
        store.put(++autoGeneratedId, new Category(autoGeneratedId, name));
        return store.get(autoGeneratedId);
    }

    @Override
    public Optional<Category> findByName(String name) {
        return store.values().stream()
            .filter(category -> category.getName().equals(name))
            .findAny();
    }

    @Override
    public Optional<Category> findById(Long categoryId) {
        return Optional.ofNullable(store.get(categoryId));
    }

    @Override
    public Category update(Category category) {
        Category updatedCategory = store.get(category.getCategoryId());
        ReflectionTestUtils.setField(updatedCategory, "name", category.getName());
        return updatedCategory;
    }

    @Override
    public void delete(Category category) {
        store.remove(category.getCategoryId());
    }

    @Override
    public List<Category> getCategories() {
        return List.copyOf(store.values());
    }
}
