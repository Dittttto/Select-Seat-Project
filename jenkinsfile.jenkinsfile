pipeline {
    agent any

    stages{
      stage('git pull'){
        steps{
          sh "echo 'git pull'"
          git branch: 'dev-deploy',
            credentialsId: 'yiyaaa',
            url: 'https://github.com/Selected-Seat/selected-seat'
        }
      }

      stage('secret yml setting'){
        steps{
          withCredentials([
            file(
              credentialsId: 'application',
              variable: 'application'
            ),
            file(
              credentialsId: 'application-persistence-database',
              variable: 'jpa'
            ),
            file(
              credentialsId: 'application-persistence-redis-adapter',
              variable: 'redis'
            )
          ]){
            script{
              sh 'chmod +x ./sh/mkdir.sh'
              sh 'sudo ./sh/mkdir.sh'
              sh 'sudo cp $application /var/lib/jenkins/workspace/Selected-Seat/web/src/main/resources/application.yml'
              sh 'sudo cp $jpa /var/lib/jenkins/workspace/Selected-Seat/infrastructure/persistence-database/src/main/resources/application-persistence-database.yml'
              sh 'sudo cp $redis /var/lib/jenkins/workspace/Selected-Seat/infrastructure/persistence-redis-adapter/src/main/resources/application-persistence-redis-adapter.yml'
            }
          }
        }
      }

      stage('build') {
          steps {
             sh '''
                echo '빌드를 시작합니다.'
                chmod +x gradlew
                sudo ./gradlew clean bootjar
                echo '성공합니다.'
              '''
          }
      }

      stage('docker build image') {
        steps {
           sh '''
              echo '도커 이미지를 빌드합니다.'
              chmod +x ./sh/docker.sh
              sudo ./sh/docker.sh
            '''
        }
      }

    }
}
